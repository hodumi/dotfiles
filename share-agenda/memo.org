#+CATEGORY: MEMO
* org-mode config
#+SEQ_TODO: TODO(t) STARTED(s) WAITING(w) APPT(a) | DONE(d) CANCELLED(c) DEFERRED(f)
#+TAGS: 八戸予約システム(h) 山梨予約システム(y) はまなす会館予約システム(m)
#+TAGS: ユニバース提出資料(u) 八戸ゴルフ倶楽部(g)
#+TAGS: 修理対応(f) オペレーション作業(o) その他作業(O)
#+TAGS: 昼休み(r)
#+STARTUP: overview
#+STARTUP: hidestars
#+STARTUP: logdone
* New Ideas
** 魔法陣作成ツール
- Electron + JavaScript + SVG
  - SVG: ベジェ曲線に沿わせて文字の描画が出来る。
- CADのように数値を直接入力
** 登録済みフォルダとカレントディレクトリをExplorerで開くランチャ
** cakephp上で、<prefix> v でViewファイル、<prefix> cでControlerファイル, <prefix> mでモデルファイルを開けたらいいな
- [[http://shigemk2.hatenablog.com/entry/20110816/1313473346][ネーミング参考]]
** Growl + Emacs 何かできる?   
- タスクの通知？
- バックグラウンドでcompassを動かし、compile終了時に通知
  - うるさいかも
** なろうをEmacsで閲覧する?
- なろう側APIはある
- ランキング等のみで、ユーザ認証 → ブックマーク表示はないみたい
- Emacs側にブックマーク機能を付けて管理する？
  - 携帯で見れない
  - なろうのブックマークに反映されない
  - org-modeのリンクで管理し、MobileOrgで見る?
** Unityで安定したLisp処理系があったらな
** テーブル構造管理用ツール
+ Gitでバージョン管理すること前提
+ マイグレート可能にする。
+ データはjson? csv?
+ テーブル構造変更後に自動でGitにcommitする。
+ SQLの簡単な実行環境もあったらいい。
+ 自動的にDBにテーブルを構築する。
+ DBの設定(サーバ名等)は、.gitignoreとし、個人個人で設定する。(cakephpのdatabase.phpのようなかんじ)
+ 
** org-modeのSCHEDULE/DEADLINEのリピートに何営業日前を設定できるようにする。
** org-modeのSCHEDULE/DEADLINEを読み込み、growlとかで通知できたらいいな
** emacsからvlcを操作し、youtube上の音声を再生する。
+ プレイリストは事前につくっておく
** Electron製プログラムランチャ
*** アイコンは、MONO製のアイコンゲッタで取得する。
** 指定長のランダム文字列を生成するelisp
** テスト、開発用データ作成ツール
*** 目的
+ ランダムなデータが入った、特定フォーマットのファイルを自動生成したい。
  例：ユーザマスタに開発用データをinsertするSQL文、CSV出力される実績データ
*** 構成
**** テンプレート
出力ファイルのテンプレート (SQLとか、CSVとか)
mustacheとかでやる。 
**** リソース
ファイルに出力されるデータ (人名、年齢、時間)
改行区切りとかのデータ
**** 出力制御プログラム
リソースをテンプレートに出力する方法 (例：完全ランダム、重みありランダム、特定回数固定値等)
プラグインみたいなかんじで、管理できるようにする。
Javascriptあたりが楽かな？
**** 設定ファイル
使用するテンプレート、リソース、出力制御プログラム
Json とか Javascriptとか、Lispとか
* Projects
** Pix-Box
#+CATEGORY: Pix-Box
*** DONE uploadフォルダに画像を入れる。 → 読み込みボタン押下 → public/imagesとpublic/thumbnailsにいれられる。(名前はハッシュ値)
*** タグを付ける。
**** タグ情報の保存DBは何にする？
  + PostgreSQL
  + MongoDB
  + and more
*** アイコンは、SVGで表示する。
*** データ構造
**** Tags
+ id :: id(Integer)
+ name :: タグの名前(string)
+ 
** org-worg-log
*** DONE 一つのファイルにログをまとめる
*** DONE gitのlogからorgの作業ログを自動生成する → こっちに移動 [[git-org-log]]
*** DONE 非計測中は、背景色を赤くする。
    CLOSED: [2015-12-07 月 15:02]
*** TODO SCHEDULEを読み取って、growlあたりで通知する。
** git-org-log
*** TODO 本作成を開始する。
*** git-org-log <options>* <output_file>
*** options
- format :: git log --pretty=format:"~~"の内容 ( "* COMMITED %s %n DONE: <%ad>" )
- author :: 検索用のcommitのauthor  ("")
- category :: #+CATEGORY: の値 ("")
** CLOG -- Common Lisp製 静的blog作成ツール
#+CATEGORY: CLOG
*** Common Lisp blOG system
*** caveman
** ColorMixer -- 調色用のツール
#+CATECORY: ColorMixer
*** 開発環境
+ Electron 
+ Riot or React
+ bootstrap
*** 必要な機能
+ カラーパレット
+ RGBの直接編集
+ HSVの直接編集
+ 色の一時記録
+ 要はGimpのカラーパレットのような機能
** Electron製のVagrant管理ソフト
+ global-statusをJSONに変換して表示する。
* Inbox
* Memo
** (ASDF:SYSTEM-SOURCE-DIRECTORY :package-name)でpackage-nameのディレクトリを取得できる
** cl-hamlやcl-mustacheと言ったテンプレートエンジンがある
** Node.jsでSHELLは動かせる。
** 画面一杯にdivを表示させる。

#+NAME: index.html
#+BEGIN_SRC html
<html>
	
	<body>
		<div id="content"> </div>
	</body>
</html>
#+END_SRC

#+NAME: index.css
#+BEGIN_SCR css
html, body {
  height: 100%
  min-height: 100%
}

#content {
  height: 100%;
  min-height: 100%;
}
#+END_SRC

